
Check CPUS - 
	sysctl hw.physicalcpu hw.logicalcpu 

To start minikube - 
	minikube start --vm-driver=virtualbox --memory='15000mb' --cpus=4  

	use default vm-driver (hyperkit)
	minikube start --memory='10000mb'  

To launch k8s dashboard - 
	minikube dashboard

To stop minikube 
	minikube stop
	minikube status
	minikube delete 

To set minikube docker environment 
	minikube docker-env
	eval $(minikube docker-env)

To ssh - 
	minikube ssh

To list App k8s objects - 
	kubectl api-resources 
	kubectl explain rc --recursive 

To get all objects running in k8s

	kubectl get all
	kubectl get pods 
	kubectl get pods -o wide 

editing an object 
	kubectl edit <type> <name> 

To create pod -
	kubectl apply -f pod-example.yaml
		(or)
	kubectl create -f pod-example.yaml

To describe a pod - 	
	kubectl describe pod pod-example  -n default
	kubectl get pod multicontainer-pod-example --output=yaml   
	
To check logs - 
	kubectl logs --tail=100 -f pod-example

To get into the pod and run sh - 
	kubectl exec -it pod-example  sh -n default  
	kubectl exec -it multicontainer-pod-example -c <container-name> sh -n default  

To create delete a pod -

	kubectl delete pod <PODNAME>

To check replication controller - 
	kubectl get rc
	kubectl get replicationcontroller 
	kubectl describe rc nginx-replication-controller 
	kubectl delete rc nginx-replication-controller 

to check deployments 
	kubectl get deployments 
	kubectl describe deployment nginx-deployment  
	kubectl rollout status deployment nginx-deployment  
	kubectl rollout history deployment nginx-deployment  
	kubectl set image deployment.apps/nginx-deployment nginx=nginx:1.9.1 --record   
	kubectl rollout undo deployment nginx-deployment --to-revision=1   
	
	kubectl scale --replicas=2 deployment/nginx-deployment  
	kubectl get hpa 

    kubectl delete deployment nginx-deployment 

to check services - 
	kubectl get svc 
	kubectl describe service cluster-ip-service 
	kubectl get endpoints
	kubectl describe endpoints cluster-ip-service

	port forwarding from local to service 
		kubectl port-forward svc/cluster-ip-service 80:80  
	To find minikube service URL for nodeport service - 
		minikube service node-port-service --url  

	NSLOOKUP using dnsutils pod 
	kubectl exec -it dnsutils -- nslookup my-headless-service 

Blue green deployment - 

	brew install gettext
	brew link --force gettext 

	Release code 1st (blue deployment)
		
		COLOR=blue TAGID=1.9.0 envsubst < deployment-blue-green.yaml| kubectl apply -f -  
		
		kubectl rollout status deployment nginx-deployment-blue  
		
		COLOR=blue envsubst < service-blue-green.yaml| kubectl apply -f -   

		minikube service nginx-service-blue-green --url   

	New Release (green  deployment)
		
		COLOR=green TAGID=1.15.4 envsubst < deployment-blue-green.yaml| kubectl apply -f -  

		kubectl rollout status deployment nginx-deployment-green  

		COLOR=green envsubst < service-blue-green.yaml| kubectl apply -f -   

		kc delete deployment nginx-deployment-blue 

	GREEN is live 


Stateful sets - 
	kubectl scale --replicas=4 statefulset/web  
	 kc delete pvc www-web-0 www-web-2 www-web-3 www-web-1   
	 kc get pvc 

Jobs - 
	kubectl get jobs
	kubectl delete job <job-name>
	kubectl describe job <job-name>

	# To get ttl feature working to clean up jobs
	minikube --feature-gates='TTLAfterFinished=true' 

Helm ---

	Add a repo - 
		helm repo add stable https://kubernetes-charts.storage.googleapis.com/

		helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/

	To create a chart 
		helm create samplechart 

	To validate 
		helm lint . 

		helm template --validate . 

	To release 
		helm package . 
		helm install samplechart .  

	to list releases
		helm list 

	To upgrade 
		 helm upgrade --dry-run samplechart .   
		 helm upgrade samplechart .    

	To rollback 
		helm rollback samplechart 1 

	To install stable chart  - consul
		helm install consul stable/consul  
		kubectl port-forward consul 8500:8500 

	To override properties for envs
		 helm install redis -f dev-redis-values.yaml stable/redis 

Ingress
	
	kc get ingress
	kc describe ingress <>

ConfigMap

	kubectl create configmap my-conf-from-file --from-file=my-conf.cnf   
	kubectl create configmap my-conf-from-literal --from-literal some=thing
	kubectl get configmaps 
			
	kubectl describe configmap my-conf-from-file 
	kubectl edit configmap my-conf-from-file

Secrets - 

	kubectl create secret generic my-user-creds  --from-literal=DB_ADMIN_USER=kube-user --from-literal=DB_ADMIN_PASSWORD=kube-pwd

	kubectl create secret generic my-api-credentials --from-file=apiSecrets.yaml

	kubectl get secret

	kubectl describe secret <name of the secret>

name space -
	you can use resource quota object to limit the usage

volume types - 	
	kc create configmap simpleconfig --from-literal some=thing --from-file user=my-conf.cnf

	kubectl create secret generic my-user-creds --from-literal=MYSQL_USER=kube-user  --from-literal=MYSQL_PASSWORD=kube-pwd

	
	

